name: Deploy api
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_API_PRIVATE_KEY_PROD }}
          known_hosts: 'placeholder-to-prevent-errors'
      - name: Add Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_API_HOST_PROD }} >> ~/.ssh/known_hosts
      - name: Copy Dockerfile & docker-compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_API_HOST_PROD }}
          username: ${{ secrets.SSH_API_USER_PROD }}
          key: ${{ secrets.SSH_API_PRIVATE_KEY_PROD }}
          port: 22
          source: 'Dockerfile,docker-compose.yml,docker-compose.prod.yml'
          target: '~/prod'
      - name: Copy other files that changed
        run: rsync -arvz --delete ./ ${{ secrets.SSH_API_USER_PROD }}@${{ secrets.SSH_API_HOST_PROD }}:~/prod
      - name: Run commands
        uses: appleboy/ssh-action@master
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PROD }}
          APP_ENV: 'prod'
          TYPESENSE_API_KEY: ${{ secrets.TYPESENSE_API_KEY_PROD }}
          VIRTUAL_HOST: ${{ secrets.VIRTUAL_HOST_PROD }}
          TYPESENSE_VIRTUAL_HOST: ${{ secrets.TYPESENSE_VIRTUAL_HOST_PROD }}
          PACKAGE_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
        with:
          host: ${{ secrets.SSH_API_HOST_PROD }}
          username: ${{ secrets.SSH_API_USER_PROD }}
          key: ${{ secrets.SSH_API_PRIVATE_KEY_PROD }}
          port: 22
          envs: DOPPLER_TOKEN,APP_ENV,TYPESENSE_API_KEY,VIRTUAL_HOST,TYPESENSE_VIRTUAL_HOST,PACKAGE_TOKEN
          script: |
            cd ~/prod
            export DOPPLER_TOKEN=$DOPPLER_TOKEN APP_ENV=$APP_ENV APP_PORT=4300 TYPESENSE_PORT=8100 TYPESENSE_API_KEY=$TYPESENSE_API_KEY VIRTUAL_HOST=$VIRTUAL_HOST TYPESENSE_VIRTUAL_HOST=$TYPESENSE_VIRTUAL_HOST PACKAGE_TOKEN=${PACKAGE_TOKEN}
            docker-compose build --no-cache
            docker-compose up -d --force-recreate --remove-orphans
